@buf = global [2 x [100 x i32]] zeroinitializer, align 16
define void @merge_sort(i32 %t0, i32 %t1) {
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	store i32 %t0, i32* %l2, align 4
	store i32 %t1, i32* %l3, align 4
	%t81 = load i32, i32* %l2, align 4
	%t8 = add nsw i32 %t81, 1
	%t82 = load i32, i32* %l3, align 4
	%t9 = icmp sge i32 %t8, %t82
	br i1 %t9, label %.L19, label %.L2
.L2:
	%t83 = load i32, i32* %l2, align 4
	%t84 = load i32, i32* %l3, align 4
	%t10 = add nsw i32 %t83, %t84
	%t11 = sdiv i32 %t10, 2
	store i32 %t11, i32* %l4, align 4
	%t85 = load i32, i32* %l2, align 4
	%t86 = load i32, i32* %l4, align 4
	call void @merge_sort(i32 %t85, i32 %t86)
	%t87 = load i32, i32* %l4, align 4
	%t88 = load i32, i32* %l3, align 4
	call void @merge_sort(i32 %t87, i32 %t88)
	%t89 = load i32, i32* %l2, align 4
	store i32 %t89, i32* %l5, align 4
	%t90 = load i32, i32* %l4, align 4
	store i32 %t90, i32* %l6, align 4
	%t91 = load i32, i32* %l2, align 4
	store i32 %t91, i32* %l7, align 4
	br label %.L3
.L3:
	%t92 = load i32, i32* %l5, align 4
	%t93 = load i32, i32* %l4, align 4
	%t12 = icmp slt i32 %t92, %t93
	br i1 %t12, label %.L4, label %.L10
.L4:
	%t94 = load i32, i32* %l6, align 4
	%t95 = load i32, i32* %l3, align 4
	%t13 = icmp slt i32 %t94, %t95
	br i1 %t13, label %.L5, label %.L10
.L5:
	%t14 = mul nsw i32 0, 100
	%t96 = load i32, i32* %l5, align 4
	%t15 = add nsw i32 %t14, %t96
	%t16 = mul nsw i32 %t15, 4
	%t97 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t98 = bitcast i32* %t97 to i8*
	%t100 = sext i32 %t16 to i64
	%t99 = getelementptr inbounds i8, i8* %t98, i64 %t100
	%t17 = bitcast i8* %t99 to i32*
	%t18 = load i32, i32* %t17, align 4
	%t19 = mul nsw i32 0, 100
	%t101 = load i32, i32* %l6, align 4
	%t20 = add nsw i32 %t19, %t101
	%t21 = mul nsw i32 %t20, 4
	%t102 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t103 = bitcast i32* %t102 to i8*
	%t105 = sext i32 %t21 to i64
	%t104 = getelementptr inbounds i8, i8* %t103, i64 %t105
	%t22 = bitcast i8* %t104 to i32*
	%t23 = load i32, i32* %t22, align 4
	%t24 = icmp slt i32 %t18, %t23
	br i1 %t24, label %.L6, label %.L7
.L6:
	%t25 = mul nsw i32 0, 100
	%t106 = load i32, i32* %l5, align 4
	%t26 = add nsw i32 %t25, %t106
	%t27 = mul nsw i32 %t26, 4
	%t107 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t108 = bitcast i32* %t107 to i8*
	%t110 = sext i32 %t27 to i64
	%t109 = getelementptr inbounds i8, i8* %t108, i64 %t110
	%t28 = bitcast i8* %t109 to i32*
	%t29 = load i32, i32* %t28, align 4
	%t30 = mul nsw i32 1, 100
	%t111 = load i32, i32* %l7, align 4
	%t31 = add nsw i32 %t30, %t111
	%t32 = mul nsw i32 %t31, 4
	%t112 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t113 = bitcast i32* %t112 to i8*
	%t115 = sext i32 %t32 to i64
	%t114 = getelementptr inbounds i8, i8* %t113, i64 %t115
	%t33 = bitcast i8* %t114 to i32*
	store i32 %t29, i32* %t33, align 4
	%t116 = load i32, i32* %l5, align 4
	%t34 = add nsw i32 %t116, 1
	store i32 %t34, i32* %l5, align 4
	br label %.L8
.L7:
	%t35 = mul nsw i32 0, 100
	%t117 = load i32, i32* %l6, align 4
	%t36 = add nsw i32 %t35, %t117
	%t37 = mul nsw i32 %t36, 4
	%t118 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t119 = bitcast i32* %t118 to i8*
	%t121 = sext i32 %t37 to i64
	%t120 = getelementptr inbounds i8, i8* %t119, i64 %t121
	%t38 = bitcast i8* %t120 to i32*
	%t39 = load i32, i32* %t38, align 4
	%t40 = mul nsw i32 1, 100
	%t122 = load i32, i32* %l7, align 4
	%t41 = add nsw i32 %t40, %t122
	%t42 = mul nsw i32 %t41, 4
	%t123 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t124 = bitcast i32* %t123 to i8*
	%t126 = sext i32 %t42 to i64
	%t125 = getelementptr inbounds i8, i8* %t124, i64 %t126
	%t43 = bitcast i8* %t125 to i32*
	store i32 %t39, i32* %t43, align 4
	%t127 = load i32, i32* %l6, align 4
	%t44 = add nsw i32 %t127, 1
	store i32 %t44, i32* %l6, align 4
	br label %.L8
.L8:
	%t128 = load i32, i32* %l7, align 4
	%t45 = add nsw i32 %t128, 1
	store i32 %t45, i32* %l7, align 4
	br label %.L3
.L10:
	%t129 = load i32, i32* %l5, align 4
	%t130 = load i32, i32* %l4, align 4
	%t46 = icmp slt i32 %t129, %t130
	br i1 %t46, label %.L11, label %.L13
.L11:
	%t47 = mul nsw i32 0, 100
	%t131 = load i32, i32* %l5, align 4
	%t48 = add nsw i32 %t47, %t131
	%t49 = mul nsw i32 %t48, 4
	%t132 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t133 = bitcast i32* %t132 to i8*
	%t135 = sext i32 %t49 to i64
	%t134 = getelementptr inbounds i8, i8* %t133, i64 %t135
	%t50 = bitcast i8* %t134 to i32*
	%t51 = load i32, i32* %t50, align 4
	%t52 = mul nsw i32 1, 100
	%t136 = load i32, i32* %l7, align 4
	%t53 = add nsw i32 %t52, %t136
	%t54 = mul nsw i32 %t53, 4
	%t137 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t138 = bitcast i32* %t137 to i8*
	%t140 = sext i32 %t54 to i64
	%t139 = getelementptr inbounds i8, i8* %t138, i64 %t140
	%t55 = bitcast i8* %t139 to i32*
	store i32 %t51, i32* %t55, align 4
	%t141 = load i32, i32* %l5, align 4
	%t56 = add nsw i32 %t141, 1
	store i32 %t56, i32* %l5, align 4
	%t142 = load i32, i32* %l7, align 4
	%t57 = add nsw i32 %t142, 1
	store i32 %t57, i32* %l7, align 4
	br label %.L10
.L13:
	%t143 = load i32, i32* %l6, align 4
	%t144 = load i32, i32* %l3, align 4
	%t58 = icmp slt i32 %t143, %t144
	br i1 %t58, label %.L14, label %.L16
.L14:
	%t59 = mul nsw i32 0, 100
	%t145 = load i32, i32* %l6, align 4
	%t60 = add nsw i32 %t59, %t145
	%t61 = mul nsw i32 %t60, 4
	%t146 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t147 = bitcast i32* %t146 to i8*
	%t149 = sext i32 %t61 to i64
	%t148 = getelementptr inbounds i8, i8* %t147, i64 %t149
	%t62 = bitcast i8* %t148 to i32*
	%t63 = load i32, i32* %t62, align 4
	%t64 = mul nsw i32 1, 100
	%t150 = load i32, i32* %l7, align 4
	%t65 = add nsw i32 %t64, %t150
	%t66 = mul nsw i32 %t65, 4
	%t151 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t152 = bitcast i32* %t151 to i8*
	%t154 = sext i32 %t66 to i64
	%t153 = getelementptr inbounds i8, i8* %t152, i64 %t154
	%t67 = bitcast i8* %t153 to i32*
	store i32 %t63, i32* %t67, align 4
	%t155 = load i32, i32* %l6, align 4
	%t68 = add nsw i32 %t155, 1
	store i32 %t68, i32* %l6, align 4
	%t156 = load i32, i32* %l7, align 4
	%t69 = add nsw i32 %t156, 1
	store i32 %t69, i32* %l7, align 4
	br label %.L13
.L16:
	%t157 = load i32, i32* %l2, align 4
	%t158 = load i32, i32* %l3, align 4
	%t70 = icmp slt i32 %t157, %t158
	br i1 %t70, label %.L17, label %.L19
.L17:
	%t71 = mul nsw i32 1, 100
	%t159 = load i32, i32* %l2, align 4
	%t72 = add nsw i32 %t71, %t159
	%t73 = mul nsw i32 %t72, 4
	%t160 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t161 = bitcast i32* %t160 to i8*
	%t163 = sext i32 %t73 to i64
	%t162 = getelementptr inbounds i8, i8* %t161, i64 %t163
	%t74 = bitcast i8* %t162 to i32*
	%t75 = load i32, i32* %t74, align 4
	%t76 = mul nsw i32 0, 100
	%t164 = load i32, i32* %l2, align 4
	%t77 = add nsw i32 %t76, %t164
	%t78 = mul nsw i32 %t77, 4
	%t165 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t166 = bitcast i32* %t165 to i8*
	%t168 = sext i32 %t78 to i64
	%t167 = getelementptr inbounds i8, i8* %t166, i64 %t168
	%t79 = bitcast i8* %t167 to i32*
	store i32 %t75, i32* %t79, align 4
	%t169 = load i32, i32* %l2, align 4
	%t80 = add nsw i32 %t169, 1
	store i32 %t80, i32* %l2, align 4
	br label %.L16
.L19:
	ret void
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%t2 = mul nsw i32 0, 400
	%t7 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t8 = bitcast i32* %t7 to i8*
	%t10 = sext i32 %t2 to i64
	%t9 = getelementptr inbounds i8, i8* %t8, i64 %t10
	%t3 = bitcast i8* %t9 to [100 x i32]*
	%t11 = bitcast [100 x i32]* %t3 to i32*
	%t4 = call i32 @getarray(i32* %t11)
	store i32 %t4, i32* %l1, align 4
	%t12 = load i32, i32* %l1, align 4
	call void @merge_sort(i32 0, i32 %t12)
	%t5 = mul nsw i32 0, 400
	%t13 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i64 0, i64 0, i64 0
	%t14 = bitcast i32* %t13 to i8*
	%t16 = sext i32 %t5 to i64
	%t15 = getelementptr inbounds i8, i8* %t14, i64 %t16
	%t6 = bitcast i8* %t15 to [100 x i32]*
	%t17 = load i32, i32* %l1, align 4
	%t18 = bitcast [100 x i32]* %t6 to i32*
	call void @putarray(i32 %t17, i32* %t18)
	store i32 0, i32* %l0, align 4
	%t19 = load i32, i32* %l0, align 4
	ret i32 %t19
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
